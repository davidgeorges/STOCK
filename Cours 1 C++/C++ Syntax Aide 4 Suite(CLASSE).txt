Le destructeur : Le destructeur est une méthode appelée lorsque l'objet est supprimé de la mémoire. Son principal rôle est de désallouer la mémoire (via desdelete) qui a été allouée dynamiquement.
Crée un destructeur : 
//prototype dans le.h
~Personnage();

// dans le .cpp :
Personnage::~Personnage()
{
    /* Rien à mettre ici car on ne fait pas d'allocation dynamique
    dans la classe Personnage. Le destructeur est donc inutile mais
    je le mets pour montrer à quoi cela ressemble.
    En temps normal, un destructeur fait souvent des delete et quelques
    autres vérifications si nécessaire avant la destruction de l'objet. */
}
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
Les méthodes constantes :Les méthodes constantes sont des méthodes de « lecture seule ». Elles possèdent le mot-clé const à la fin de leur prototype et de leur déclaration.
( elle ne modifie pas l'objet, elle modifie la valeur d'aucun de ses  attributs	, une méthode qui affiche un message a l'écran est une methode constante.

//Prototype de la méthode (dans le .h) :
void maMethode(int parametre) const;
 
 
//Déclaration de la méthode (dans le .cpp) :
void MaClasse::maMethode(int parametre) const
{
 
}

On utilisera le mot-clé const sur des méthodes qui se contentent de renvoyer des informations sans modifier l'objet.
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------