--------------Affichage-------------------------------------------------------------------------------------------------------
std ou std:: = ( bibliotheque standard , elle a etait resumer dans un "espace de nom", qui ici s'appelle std)
cout :  affiche un message à l'écran ( cout << " Message a print" <<
end1 : crée un retour a la ligne dans la console cout << " Message a print" << end1
std::cerr = error
std::clog = 
std::hex = pour passer l'affichage en hexadecimal  ( il y a hex,oct pour octale et celle de base decimal )
std::scientific
std::setw(nombre d'espace) = espace blanc
std::setfill('on affiche des - ou + ou autre') = modifie le mode de remplissage
std::left = ...


----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
--------------Variable-------------------------------------------------------------------------------------------------------
variable : type nom(valeur); : int ageUtilisateur(18); , de préférence utilisé : type nom{valeur};
référence sur variable = type& nom(nomvariablearéfrer);

Un pointeur est une adresse vers une variable, ou un accès indirect à cette dernière.
Une référence est la variable elle même, sous un nom diffèrent.
delctype(nom premiere variable) nomdeuxiemevariable; = nomdeuxiemevariable va être du automatiquement du même type que nompremierevariable
variable = (type)variable; ou variable = type(variable); = c'est un cast ( changer le type d'une variable )

std::numeric_limits<int>::max() = nous retourne le nom maximal utilisable pour une variable de type int

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
--------------Saisie-------------------------------------------------------------------------------------------------------
cin : on demande a l'utilisateur de renrer un valeur : cin >> variable; // s'arrête au premier espace ou retour à la ligne

cin.getline(cin,variable); = accepte les espace et retour a la ligne ( gerer une lecture complete de ligne ) prend des parametre
cin.getline(flux,string,delimiter);
Si cin>> dans code et on veut mettre un getline(); ensuite on doit mettre  un cin.ignore(); car sinon le programme buh
cin.clear(); = enleve tout
cin.ingnore(); = ignorer certain nombre de chose que nous allons lire, choisir un certain nombre de caractere a ignorer jusqu'a rencontrer un \n ( on le met après un cin si il y a un getline qui suit )
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
--------------Tableau-------------------------------------------------------------------------------------------------------
tableau statique ( normal ) = type nom[taille]; // int utilisateur[18];
tableau dynamique : vector<type> nom(taille); // vectore<int> utilisateur(5); // on peut aussi remplir tout les case en fesant vectore<int> utilisateur(5,3) , 3 = valeur de 0 a 4



tableau statique multi-dimensionnel : type nomTableau[tailleX][tailleY]; //int tableau[5][4]; // ou en declarant des constantes 
int const tailleX(5);
int const tailleY(4);
int tableau[tailleX][tailleY];

tableau dynamique multi-dimensionnel : vector<vector<type> > nom; //  vector<vector<int> > grille;
grille.push_back(vector<int>(5));   //On ajoute une ligne de 5 cases à notre grille
grille.push_back(vector<int>(3,4)); //On ajoute une ligne de 3 cases contenant chacune le nombre 4 à notre grille
grille[0].push_back(8);     //Ajoute une case contenant 8 à la première ligne du tableau
grille[2][3] = 9;     //Change la valeur de la cellule (2,3) de la grille ( Il faut par contre s'assurer que cette ligne et cette colonne existent réellement, seulement pour les tableau dynamique)

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------








