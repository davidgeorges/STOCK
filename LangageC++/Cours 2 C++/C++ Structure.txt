Structure

struct Person
{
    char name[50];
    int age;
    float salary;
};


Declaration : Person p1;

Acc√©der au champs : 
	p1.name[i];
	p1.age;
	p1.salary;

------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------Structure et fonction-----------------------------------------------------------------

struct Person {
    char name[50];
    .......
};

Person getData(Person); 
void displayData(Person); 

int main(){
    Person p;
    p = getData(p);   
    ....
}

Person getData(Person p){

    cout << "Enter Full name: ";
    cin.get(p.name, 50);
    cout << "Enter age: ";

    ..........
    return p;
}

------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------Structure et Pointeur-----------------------------------------------------------------

struct Distance{
    int feet;
    float inch;
};

int main(){
    Distance *ptr, d;

    ptr = &d;
    
    cout << "Enter feet: ";
    cin >> (*ptr).feet;
    cout << "Enter inch: ";
    cin >> (*ptr).inch;
 
    cout << "Displaying information." << endl;
    cout << "Distance = " << (*ptr).feet << " feet " << (*ptr).inch << " inches"; // ou ptr->feet ???

    return 0;
}

------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------Enumeration----------------------------------------------------------------------

enum seasons { spring = 34, summer = 4, autumn = 9, winter = 32}; // par defaut si pas d'iniatiliation sprint vaut 0 , summer vaut 1 et ....

int main() {

    seasons s;

    s = summer;
    cout << "Summer = " << s << endl;

    return 0;
}

------------------------------------------------------------------------------------------------------------------------------------------------

Enum for flags

enum designFlags {
    BOLD = 1,
    ITALICS = 2,
    UNDERLINE = 4
};

int main() 
{
    int myDesign = BOLD | UNDERLINE; 

        //    00000001
        //  | 00000100
        //  ___________
        //    00000101

    cout << myDesign; //  = 5

    return 0;
}

